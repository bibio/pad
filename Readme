パズドラ簡易シミュレーションプログラム

概要
===

本ドキュメントは、

パズル＆ドラゴンスのピースを消去するアルゴリズムの簡易版、すなわち、
碁盤の目状に並んだ数値の配列において、任意の隣接（斜めも含む）した要素を入れ替えることで
縦または横方向に3つ以上同じ値が連続するパターンをシミュレートするプログラム　pad

についての使用法および仕様について説明します。

機能
===

1) 横6,縦5からなる配列の各値に1〜6のいずれかをランダムに設定した配列を生成し、配列を表示します
   上記で設定したもののうち、縦または横方向に3つ以上同じ値が連続するものを列挙します
2) 1)で生成した配列で、縦または横方向に3つ以上同じ値が連続しない配列を生成し、表示します。
3) 2)で生成した配列で、隣接する縦または横方向および斜めのセルを入れ替えることで縦または横方向に3つ以上同じ値
   が連続したときの、入れ替えのパターンを表示します

動作要件
=======

ruby 1.9.3 以上

使い方
=====

1. シェルを起動します。PATH に ruby.exe のあるディレクトリを含めてください。

2. 以下のコマンドで起動します。対話型インタフェースです。 

$ ruby pad.rb

パズドラシミュレーション

メニュー）
1: ３つ以上同じ値が並ぶ組み合わせを表示   # 機能1)
2: 縦にも横にも３つ以上同じ値が配置されれない  # 機能2)
3: 縦または横を入れ替えた場合に３つ以上同じ値が並ぶ組み合わせを表示 # 機能3)
4: 隣接する斜めの入れ替えも含めて組み合わせを表示 # 機能3)
9: 終了
メニューを入力してください(12349)> 

3. 実行したいメニューを選択してください。

メニューを入力してください(12349)> 1

[ボード]
6,3,4,3,4,4
5,4,6,3,3,5
5,4,6,3,2,6
6,6,5,2,6,3
4,4,4,3,3,4

[マッチ]
[1] 方向: 横 座標: (0,4) ヒット数: 3 ラベル: 4
[2] 方向: 縦 座標: (3,0) ヒット数: 3 ラベル: 3

ファイル構成
==========
 Gemfile  : ライブラリ設定ファイル
 pad.rb   : 実行プログラム
 lib/
   pad_board.rb    : ゲーム盤（配列）管理クラス
   pad_runner.rb   : 実行ライブラリ
   pad_util.rb     : n個以上同じ値が並ぶかを判定するメソッド定義
 spec/
   pad_board_spec.rb  : pad_boardの単体テスト
   pad_util_spec.rb   : pad_utilの実行テスト

設定
===

PadBoard クラスの定数で以下の情報を定義しています
  COLUMNS : 配列の横の数 (設定値:6)
  ROWS    : 配列の縦の数 (設定値:5)
  ITEMS   : 配列の要素の数値配列 (設定値:[1,2,3,4,5,6])
  MIN_LEN : 同じ値が並ぶかを判定する最小数 (設定値:3)


クラス構成
=========

PadBoard : ゲーム盤（配列）クラスです
[概要]
 縦COLUMNS個、横ROWS個の配列を管理します。内部では一次元の配列として管理します。
 
 配列は以下の座標系で管理します。
   0       1       2       3       4       5
   o-------+-------+-------+-------+-------+-------->x
   | (0,0) | (1,0) | (2,0) | (3,0) | (4,0) | (5,0) |   
  1|-------+-------+-------+-------+-------+-------+
   | (0,1) | (1,1) | (2,1) | (3,1) | (4,1) | (5,1) |
  2|-------+-------+-------+-------+-------+-------+
   | (0,2) | (1,2) | (2,2) | (3,2) | (4,2) | (5,2) |
  3|-------+-------+-------+-------+-------+-------+
   | (0,3) | (1,3) | (2,3) | (3,3) | (4,3) | (5,3) |
  4|-------+-------+-------+-------+-------+-------+
   | (0,4) | (1,4) | (2,4) | (3,4) | (4,4) | (5,4) |
   |-------+-------+-------+-------+-------+-------+
   v
   y
 座標系と内部の配列の変換は pos メソッドと coord配列で行います。
 
[属性]
  @board: ゲーム盤の配列。COLUMNS x ROWS 個の１次元の配列
[特異メソッド]
  no_sequence_board : MIN_LEN個の同じ値が並ばないPadBoardを返します
  pos(x,y) : 座標値から内部配列の要素を返します
  coord(pos) : 内部配列を座標系に変換します
  arounds(x,y) : 隣接する縦・横の座標の配列を返します
  arounds_with_angle(x,y)：隣接する縦・横・斜めの座標の配列を返します
  new: PadBoardメソッドを生成する
[インスタンスメソッド]
  each_row(&blk) : 横方向に blk を評価します
  each_column(&blk) : 縦方向に blk を評価します
  sequence(): MIN_LEN以上同じ数が並んでいるか調べます。で返します。
  is_sequence? : MIN_LEN以上同じ数が並んでいるかを判定します
  sequence_combination_by_swap(around_func) : 入れ替えの組み合わせを求めます
  to_s(): 配列をテーブル形式に表示します

PadRunner: シミュレーション実行のクラスです
[概要]
  メニューとプロンプトを表示し、ユーザからの入力に従いメソッドを実行します。
[特異メソッド]
  new(*args) : PadRunner オブジェクトを生成しますコマンドライン引数を取得します
[インスタンスメソッド]
なし

PadUtil: ユーティリティモジュール
[概要]
配列から MIN_LEN以上同じ値が続いていた部分の情報を返します
Array クラスにインスタンスメソッドを組み込みます。

[インスタンスメソッド]
  sequence: MIN_LEN以上同じ値が続いている部分を取得します。
            該当部分の配列を返します。該当する部分が存在しない場合は [] を返します。
			該当部分は以下のHashで構成されます。
			   pos: 配列内の出現位置
			   len: 継続する長さ
			   item: マッチした数
			
			例： [1, 3, 3, 3, 5, 1] #=> pos:1, len:3, item:3

シーケンス
=========

代表的な機能についてのシーケンスは次の通りです。

・ランダムな値が設定された配列を作成し、MIN_LEN以上同じ値を表示する

   pad.rb     PadRunner     PadBoard     Array(included PadUtil)
   ------     ---------     --------     -----------------------
     |            |             |               |
	 | ---------> |             |               |
	 |   new()    |             |               |
	 |            | ----------->|               |
	 |            |    new()    |               |
	 |            |             |               |
	 |            | ----------->|               |
 	 |            |  sequence() |               |
	 |            |             | ------------> |   
	 |            |             |  sequence()   |
	 |            | ----------->|               |
 	 |            |    to_s()   |               |
 	 |            |             |               |	  

・MIN_LEN以上同じ値が連続しない配列を生成する
・隣接する縦横斜めの入れ替えのうちMIN_LEN以上同じ値が連続するパターンを列挙する

   pad.rb     PadRunner              PadBoard     Array(included PadUtil)
   ------     ---------              --------     -----------------------
     |            |                     |               |
	 | ---------> |                     |               |
	 |   new()    |                     |               |
	 |            | ------------------->|               |
	 |            | no_sequence_board() |               |
     |            |                     | ------------->|
     |            |                     |  is_sequence? |
     |            | ------------------->|               |
     |            |  sequence_combina   |               |
     |            |      tion_by_swap() |               |
     |            |                     |               |
     |            | ------------------->|               |
     |            |      to_s()         |               |
     |            |                     |               |	 


以上です。